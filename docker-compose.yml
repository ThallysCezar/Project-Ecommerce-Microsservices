version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ecommerce-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Eureka Server (Service Discovery)
  eureka-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Config Server (Centralized Configuration)
  config-server:
    build:
      context: ./ms-configs
      dockerfile: Dockerfile
    container_name: config-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8081/eureka/
    ports:
      - "8888:8888"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Database Service (Centralized Database Management)
  ms-database:
    build:
      context: ./ms-database
      dockerfile: Dockerfile
    container_name: ms-database
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_RABBITMQ_HOST: rabbitmq
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8081/eureka/
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Usuarios Microservice
  ms-usuarios:
    build:
      context: .
      dockerfile: ./ms-usuarios/Dockerfile
    container_name: ms-usuarios
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8081/eureka/
      DATABASE_CLIENT_URL: http://ms-database:8080
    ports:
      - "8083:8083"
    depends_on:
      rabbitmq:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      ms-database:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Produtos Microservice
  ms-produtos:
    build:
      context: .
      dockerfile: ./ms-produtos/Dockerfile
    container_name: ms-produtos
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8081/eureka/
      DATABASE_CLIENT_URL: http://ms-database:8080
    ports:
      - "8084:8084"
    depends_on:
      rabbitmq:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      ms-database:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Pedidos Microservice
  ms-pedidos:
    build:
      context: .
      dockerfile: ./ms-pedidos/Dockerfile
    container_name: ms-pedidos
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8081/eureka/
      DATABASE_CLIENT_URL: http://ms-database:8080
    ports:
      - "8085:8085"
    depends_on:
      rabbitmq:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      ms-database:
        condition: service_healthy
      ms-usuarios:
        condition: service_healthy
      ms-produtos:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Pagamentos Microservice
  ms-pagamentos:
    build:
      context: .
      dockerfile: ./ms-pagamentos/Dockerfile
    container_name: ms-pagamentos
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8081/eureka/
      DATABASE_CLIENT_URL: http://ms-database:8080
    ports:
      - "8086:8086"
    depends_on:
      rabbitmq:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      ms-database:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8081/eureka/
    ports:
      - "8082:8082"
    depends_on:
      eureka-server:
        condition: service_healthy
      ms-usuarios:
        condition: service_healthy
      ms-produtos:
        condition: service_healthy
      ms-pedidos:
        condition: service_healthy
      ms-pagamentos:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres-data:
  rabbitmq-data:
